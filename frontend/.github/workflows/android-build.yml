name: Android APK (Manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROID_SDK_ROOT: /usr/local/android-sdk
      ANDROID_HOME: /usr/local/android-sdk
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install JS deps (frontend)
        working-directory: frontend
        shell: bash
        run: |
          corepack enable || true
          if [ -f yarn.lock ]; then
            yarn install --check-files
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Setup Android SDK
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/cmdtools.zip
          unzip -q /tmp/cmdtools.zip -d $ANDROID_SDK_ROOT
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/ || true
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-35" \
            "build-tools;35.0.0"

      - name: Make gradlew executable
        run: chmod +x frontend/android/gradlew

      - name: Detect signing secrets
        id: detect
        shell: bash
        run: |
          if [[ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" && -n "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" && -n "${{ secrets.ANDROID_KEY_ALIAS }}" && -n "${{ secrets.ANDROID_KEY_PASSWORD }}" ]]; then
            echo "has_keystore=true" >> $GITHUB_OUTPUT
          else
            echo "has_keystore=false" >> $GITHUB_OUTPUT
          fi

      - name: Decode keystore
        if: ${{ steps.detect.outputs.has_keystore == 'true' }}
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > frontend/android/app/release.keystore

      - name: Write signing to gradle.properties
        if: ${{ steps.detect.outputs.has_keystore == 'true' }}
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          mkdir -p $HOME/.gradle
          cat > $HOME/.gradle/gradle.properties <<'EOF'
          MYAPP_UPLOAD_STORE_FILE=app/release.keystore
          MYAPP_UPLOAD_STORE_PASSWORD=${ANDROID_KEYSTORE_PASSWORD}
          MYAPP_UPLOAD_KEY_ALIAS=${ANDROID_KEY_ALIAS}
          MYAPP_UPLOAD_KEY_PASSWORD=${ANDROID_KEY_PASSWORD}
          org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

      - name: Build RELEASE (signed)
        if: ${{ steps.detect.outputs.has_keystore == 'true' }}
        working-directory: frontend/android
        run: ./gradlew --no-daemon --stacktrace --info assembleRelease

      - name: Build DEBUG (fallback)
        if: ${{ steps.detect.outputs.has_keystore != 'true' }}
        working-directory: frontend/android
        run: ./gradlew --no-daemon --stacktrace --info assembleDebug

      - name: Upload RELEASE APK
        if: ${{ steps.detect.outputs.has_keystore == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: frontend/android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload DEBUG APK
        if: ${{ steps.detect.outputs.has_keystore != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: frontend/android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error